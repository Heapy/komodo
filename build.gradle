plugins {
    id("org.jetbrains.kotlin.jvm").version("1.2.71").apply(false)
    id("io.spring.dependency-management").version("1.0.6.RELEASE").apply(false)
    id("com.jfrog.bintray").version("1.8.4").apply(false)
    id("org.jetbrains.dokka").version("0.9.17").apply(false)
}

// TODO: Komodo DI and Komodo DI Default should be Common module
// https://kotlinlang.org/docs/reference/multiplatform.html
// https://blog.kotlin-academy.com/extracting-multiplatform-common-modules-in-android-4a564cc03e0a

subprojects {
    apply plugin: "kotlin"
    apply plugin: "io.spring.dependency-management"

    kotlin.experimental.coroutines "enable"

    compileKotlin {
        kotlinOptions.jvmTarget = "$kotlinJvmTarget"
    }

    compileTestKotlin {
        kotlinOptions.jvmTarget = "$kotlinJvmTarget"
    }

    repositories {
        jcenter()
        maven { setUrl("https://dl.bintray.com/kotlin/kotlin-eap/") }
        maven { setUrl("https://dl.bintray.com/heapy/heap/") }
    }

    dependencyManagement {
        dependencies {
            dependency("org.slf4j:slf4j-api:$slf4jVersion")

            dependency("org.jetbrains.kotlin:kotlin-script-util:$kotlinVersion")
            dependency("org.jetbrains.kotlin:kotlin-compiler-embeddable:$kotlinVersion")
            dependency("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion")
            dependency("org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion")
            dependency("org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:$kotlinxCoroutines")

            dependency("io.undertow:undertow-core:$undertowVersion")

            dependency("org.apache.httpcomponents:httpasyncclient:$apacheHttpClientVersion")

            dependency("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
            dependency("io.mockk:mockk:$mockkVersion")
        }
    }

    dependencies {
        compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
        compile("org.jetbrains.kotlin:kotlin-reflect")
        compile("org.jetbrains.kotlinx:kotlinx-coroutines-jdk8")

        testCompile("io.mockk:mockk")
        testCompile("org.junit.jupiter:junit-jupiter-engine")
    }
}


project(":komodo") {
    dependencies {
        compile(project(":komodo-light"))
        compile("org.slf4j:slf4j-api")
    }
}

project(":komodo-args") {
    dependencies {
        compile("com.beust:jcommander:1.48")
        compile(project(":komodo-console"))
    }
}

project(":komodo-config") {
    dependencies {
        compile(project(":komodo-args"))
        compile(project(":komodo-di"))
        compile(project(":komodo-scripting"))
        compile(project(":komodo-core"))
    }
}

project(":komodo-console") {
    dependencies {
        compile(project(":komodo-core"))
    }
}

project(":komodo-core") {
    dependencies {
        compile(project(":komodo-di"))
        compile(project(":komodo-di-default"))
        compile(project(":komodo-args"))
        compile(project(":komodo-config"))

        compile("org.funktionale:funktionale-either:1.2")
    }
}

project(":komodo-di") {
    dependencies {
        compile group: 'com.google.inject', name: 'guice', version: '4.2.0'
        compile group: 'org.springframework', name: 'spring-context', version: '5.0.5.RELEASE'
    }
}

project(":komodo-di-default") {
    dependencies {
        compile(project(":komodo-di"))
    }
}

project(":komodo-integration:komodo-http") {
    dependencies {
        compile("org.apache.httpcomponents:httpasyncclient")
    }
}

// Light version of komodo
project(":komodo-light") {
    dependencies {
//        compile(project(":komodo-di"))
//        compile(project(":komodo-config"))
//        compile(project(":komodo-core"))
        compile("org.slf4j:slf4j-api")
    }
}

project(":komodo-samples") {
    dependencies {
        compile(project(":komodo"))
    }
}

project(":komodo-samples:sample-komodo") {
    dependencies {
        compile(project(":komodo-scripting"))
        compile(project(":komodo-light"))
    }
}

project(":komodo-samples:sample-komodo-light") {
    dependencies {
        compile(project(":komodo-light"))
    }
}

project(":komodo-scripting") {
    dependencies {
        compile(project(":komodo-di"))

        compile("org.jetbrains.kotlin:kotlin-script-util")
        compile("org.jetbrains.kotlin:kotlin-compiler-embeddable")
    }
}

project(":komodo-bom") {
    apply plugin: "maven"

    dependencyManagement {
        dependencies {
            //sample of library dependency
            //dependency("by.heap:komodo:0.10")
        }
    }
}

project(":komodo-integration:komodo-undertow") {
    dependencies {
        compile(project(":komodo-di"))
        compile("io.undertow:undertow-core")
    }
}
